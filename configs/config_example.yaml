common:
  log:
    level: "debug"
    file: "stdout"
    format: "text"


webhook:
  workers: 8

  routes:
    - name: github
      path: /github
      eventType: "data.headers['X-Github-Event'][0]"  # CEL expression to retrieve the event.
      gitSecretName: "'git-credentials'" # CEL expression that must resolve to a valid secret name. Use single quotes for literal values.
      events:
        - type: push
          repository: "data.body.payload.repository.ssh_url"
          commit: "data.body.payload.after"
          diffCommit: "data.body.payload.before"
          variables:
            ref: "data.body.payload.ref.replace('refs/heads/', '').replace('refs/tags/', '')"
            tag: "data.body.payload.ref.startsWith('refs/tags/')"
            shortCommit: "data.body.payload.head_commit.id.substring(0,7)"
            email: "data.body.payload.head_commit.author.email"
            author: "data.body.payload.head_commit.author.name"
            user: "data.body.payload.pusher.name"
            custom: "'MY_CUSTOM_VALUE'"
        - type: pullRequest
          repository: "data.body.pull_request.base.repo.ssh_url"
          commit: "data.body.pull_request.head.sha"
          diffCommit: "data.body.pull_request.base.sha"
          variables:
            ref: "data.body.pull_request.base.ref"
            tag: "data.body.pull_request.merge_commit_sha != null"
            shortCommit: "data.body.pull_request.base.sha.substring(0, 7)"
            user: "data.body.pull_request.user.login"
    - name: custom
      path: /custom
      eventType: "data.body.type"
      events:
        - type: customEvent
          repository: "data.body.repository_name"
          variables:
            ref: "data.body.branch"
            custom: "'MY_CUSTOM_VALUE'"

launcher:
  imageName: "k3d-registry:5111/launcher"
  pullPolicy: "IfNotPresent"
  tag: ""

  namespace: "pipe-manager"
  jobNamePrefix: "pipeline-launcher"
  timeout: 600
  backoffLimit: 2
  cloneDepth: 1

  rolesBinding: []

  artifactsBucket:
    url: "s3://pipe-manager/artifacts"
    basePath: "pipe-manager"
    parameters:
      endpoint: "localhost:9000"
      disableSSL: "true"
      s3ForcePathStyle: "true"
      awssdk: "v1"
    credentials:
      env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: "s3-credentials"
              key: aws_access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: "s3-credentials"
              key: aws_secret_access_key
      volumes:
        - name: s3-credentials
          secret:
            secretName: "s3-credentials"
      volumeMounts:
        - name: s3-credentials
          mountPath: "/etc/s3-credentials"
          readOnly: true

  configmapName: "pipeline-launcher-config"

